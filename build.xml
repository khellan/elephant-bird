<project name="elephant-bird" default="release-jar" basedir=".">
    
  <!-- Global properties for this build -->
  <property name="jar.name" value="elephant-bird" />
  <property name="version" value="1.2.2" />

  <!-- Directories -->
  <property name="build.dir" location="build" />
  <property name="javadoc.dir" location="javadoc" />
  <property name="dist.dir"  location="dist" />
  
  <property name="src.dir" location="src" />
  <property name="src.java.dir" location="${src.dir}/java" />

  <property name="src.gen.java.dir" location="${build.dir}/gen-java" /> 
  <property name="classes.dir" location="${build.dir}/classes" />

  <property name="lib.dir" value="${basedir}/lib"/>


  <target name="debug" description="sets properties for debugging (logging on, debug symbols, etc)">
	<echo message="Building in debug mode..."/>
	<property name="compile.mode" value="debug"/>
	<property name="java.debug" value="true"/>
  </target>

  <target name="release" description="sets properties for release builds.">
	<echo message="Building in release mode..."/>
	<property name="compile.mode" value="release"/>
	<property name="java.debug" value="false"/>
  </target>

  <target name="init">
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />
  </target>

  <macrodef name="compile-standard">
   <sequential>
    <!-- Compile the java code from ${src.java} into ${build} -->
    <javac srcdir="${src.java.dir}" destdir="${classes.dir}" debug="${java.debug}" debuglevel="lines,vars,source" excludes="**/*Binary*" >
      <classpath>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
   </sequential>
  </macrodef>
    

  <target name="compile" depends="init" description="compile the source">
   <compile-standard />
  </target>
    
  <target name="jar" depends="compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist.dir}"/>
	<!-- Delete the old jar file -->
	<delete file="${dist.dir}/${jar.name}-${version}.jar"/>
    <jar jarfile="${dist.dir}/${jar.name}-${version}.jar">
      <fileset dir="${classes.dir}"/>
    </jar>
  </target>
  
  <target name="javadoc" depends="compile" description="generate documentation" >
    <delete dir="${javadoc.dir}" />
    <javadoc destdir="${javadoc.dir}">
      <fileset dir="${src.java.dir}" />
      <fileset dir="${src.gen.java.dir}" />
      <classpath>
        <fileset dir="${lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javadoc>
  </target>

  <target name="debug-jar" description="Build debug and jar" depends="debug,jar"/>
  <target name="release-jar" description="Build release and jar" depends="release,jar"/>

  <target name="clean" description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build.dir}"/>
    <delete dir="${classes.dir}" />
    <delete dir="${dist.dir}"/>
  </target>

</project>
